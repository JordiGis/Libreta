<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Acceso</title>

    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
    
    <!-- Local -->
    <link rel="stylesheet" href="../public/css/acceso.css">
    <link rel="stylesheet" href="../public/css/estilo.css">
    <!-- Bootstrap -->
    <link rel="stylesheet" href="../public/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="../public/bootstrap/icons/bootstrap-icons.css">

    <!-- Web -->
    <link rel="stylesheet" href="/css/estilo.css">
    <link rel="stylesheet" href="/css/acceso.css">
    <!-- Bootstrap -->
    <link rel="stylesheet" href="/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="/bootstrap/icons/bootstrap-icons.css">
</head>
<body>
    <main id="app">
        <header>
            <h1>Libreta</h1>
            <nav>
                <ul>
                    <li>
                        <a href="#">
                            <i class="bi bi-house-fill"></i>
                        </a>
                    </li>
                    <li>
                        <a href="#">
                            <i class="bi bi-list"></i>
                        </a>
                    </li>
                </ul>
            </nav>
        </header>
        <section>
            <article id="modo">
                <button id="LogIn" type="button" @click="switchLogIn" :disabled="isSubmitting">LogIn</button>
                <button id="SignUp" class="modoAleternativo" type="button" @click="switchSignUp" :disabled="isSubmitting">SignUp</button>
            </article>
            <article>
                <form @submit="handleSubmit" :action="model.action" method="post">
                    <transition-group name="stagger-fade" tag="div">
                        <div
                          v-for="(input, index) in model.inputs"
                          :key="`input-${input.name}-${index}`"
                          class="registro"
                          v-show="isSubmittedFail || !isSubmitted"
                          :style="{ '--fade-delay': getFadeDelay(index) }"
                        >
                          <label v-if="input.type !== 'submit'" :for="input.name">
                            {{ label(input.placeholder) }} 
                          </label>
                          <input
                            :type="input.type"
                            :name="input.name"
                            :id="input.name"
                            :value="input.value" 
                            v-model="input.value" 
                            :placeholder="input.placeholder"
                            :required="input.required"
                          >
                          <div class="ojos" v-if="input.type === 'password' || input.pass != null">
                            <i class="bi bi-eye-slash" v-if="input.pass" @click="visibilidadPassword(index)"></i>
                            <i class="bi bi-eye" v-if="!input.pass" @click="visibilidadPassword(index)"></i>
                          </div>
                          <span v-if="input.required" class="requerido">*</span>
                        </div>
                      </transition-group>
                    <button type="submit" :class="{'btn-moving': isMoving, 'btn-returning': isReturning}" :disabled="isSubmitting">
                        <i v-if="!isSubmitted" class="bi bi-send-fill"></i>
                        <i v-if="isSubmitted" class="bi bi-send-check-fill rotate-plus-45"></i>
                    </button>
                </form>
            </article>
        </section>
    </main>
    <script>
        new Vue({
            el: '#app',
            data: {
                accion: '<%= paramas.accion %>',
                modelLogIn: {
                    action: '<%= paramas.actionLogIn %>',
                    inputs: [
                        {name: 'email', type: "email", value: '<%= paramas.email %>', placeholder: 'Email', required: true},
                        {name: 'password', type: "password", pass: false, placeholder: 'Password', required: true},
                    ]
                },
                modelSignUp: {
                    action: '<%= paramas.actionSignUp %>',
                    inputs: [
                        {name: 'name', type: "text", value: '<%= paramas.nombre %>', placeholder: 'Name', required: true},
                        {name: 'email', type: "email", value: '<%= paramas.email %>', placeholder: 'Email', required: true},
                        {name: 'password', type: "password", pass: false, placeholder: 'Password', required: true},
                        {name: 'passwordConf', type: "password", pass: false, placeholder: 'Repeat Password', required: true},
                    ]
                },
                model: {},
                isMoving: false,
                isReturning: false,
                isSubmitting: false,
                isSubmitted: false,
                isSubmittedFail: false,
            },
            created() {
                this.model = this.modelLogIn;
                if (this.accion === 'signUp') {
                    this.switchSignUp();
                } else if (this.accion === 'logIn') {
                    this.switchLogIn();
                }
            },
            methods: {
                switchLogIn() {
                    this.model = this.modelLogIn;
                    document.querySelector('#SignUp').classList.add('modoAleternativo');
                    document.querySelector('#LogIn').classList.remove('modoAleternativo');
                },
                switchSignUp() {
                    this.model = this.modelSignUp;
                    document.querySelector('#LogIn').classList.add('modoAleternativo');
                    document.querySelector('#SignUp').classList.remove('modoAleternativo');
                },
                label(placeholder) {
                    return placeholder + ':';
                },
                visibilidadPassword(index) {
                    this.model.inputs[index].type = this.model.inputs[index].type === 'password' ? 'text' : 'password';
                    this.model.inputs[index].pass = this.model.inputs[index].type === 'password' ? false : true;
                },
                validateForm() {
                    return this.model.inputs.every(input => input.required ? input.value.trim() !== '' : true);
                },
                handleSubmit(event) {
                    event.preventDefault();
                    if (true) {
                        this.isSubmitting = true;
                        this.isMoving = true;
                        setTimeout(() => {
                            this.isReturning = true;
                            this.isSubmitted = true;
                            setTimeout(() => {
                                this.isReturning = false;
                                this.isSubmitting = false;
                            }, 500);
                            this.isMoving = false;
                            event.target.submit();
                        }, 700);
                    } else {
                        this.isSubmittedFail = true;
                        setTimeout(() => this.isSubmittedFail = false, 2000);
                    }
                },
                getFadeDelay(index) {
                    return `${index * 0.2}s`;
                }
            },
        });
    </script>
</body>
</html>
